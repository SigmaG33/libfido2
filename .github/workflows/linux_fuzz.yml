name: fuzzer

on:
  push:
    paths-ignore:
    - '.actions/**'
    - '!.actions/fuzz-linux'
    - '.gitattributes'
    - '.gitignore'
    - 'LICENSE'
    - 'NEWS'
    - '**.adoc'
    - '**.css'
    - 'examples/**'
    - 'man/**'
    - 'regress/**'
    - 'src/hid_*.c'
    - '!src/hid_linux.c'
    - '!src/hid_unix.c'
    - 'tools/**'
    - 'udev/**'
    - 'windows/**'
  pull_request:
    paths-ignore:
    - '.actions/**'
    - '!.actions/fuzz-linux'
    - '.gitattributes'
    - '.gitignore'
    - 'LICENSE'
    - 'NEWS'
    - '**.adoc'
    - '**.css'
    - 'examples/**'
    - 'man/**'
    - 'regress/**'
    - 'src/hid_*.c'
    - '!src/hid_linux.c'
    - '!src/hid_unix.c'
    - 'tools/**'
    - 'udev/**'
    - 'windows/**'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04 ]
        cc: [ clang-10 ]
        sanitizer: [ asan, msan ]
    steps:
    - uses: actions/checkout@v2
    - name: dependencies
      env:
        CC: ${{ matrix.cc }}
      run: |
        sudo apt -q update
        sudo apt install -q -y libcbor-dev \
          libudev-dev ${CC%-*}-tools-${CC#clang-}
    - name: fuzz
      env:
        CC: ${{ matrix.cc }}
        SANITIZER: ${{ matrix.sanitizer }}
      run: ./.actions/fuzz-linux ${SANITIZER}
